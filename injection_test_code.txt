import subprocess
import re
import time

# SQLMap 명령어
sqlmap_command = [
    "sqlmap",
    "-u",
    "https://86cd-211-196-74-152.ngrok-free.app/DVWA/vulnerabilities/sqli/?id=1&Submit=Submit#",
    "--threads=4",
]

# SQLMap 프로세스 실행
process = subprocess.Popen(sqlmap_command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)

# 실행 결과 읽기
output_lines = []
injectable_lines = []  # might be injectable이 있는 줄 목록
for _ in range(30):
    output_line = process.stdout.readline()
    if not output_line:
        break
    output_lines.append(output_line)
    print(output_line.strip())  # 실행 결과 한 줄씩 출력

    # might be injectable이 있는 줄 저장
    if "might be injectable" in output_line:
        injectable_lines.append(output_line.strip())

# 프로세스 강제 종료
process.terminate()
process.wait()

# 결과 출력
output = ''.join(output_lines)  # 실행 결과 합치기

# 취약점 판단을 위한 패턴
pattern_injectable = r"might be injectable"
pattern_not_injectable = r"does not seem to be injectable"

# 취약점 여부 분석
matches_injectable = re.findall(pattern_injectable, output)
matches_not_injectable = re.findall(pattern_not_injectable, output)

if matches_injectable:
    print("취약점이 발견되었습니다.")
elif matches_not_injectable:
    print("취약점이 발견되지 않았습니다.")
else:
    print("결과를 분석할 수 없습니다.")
